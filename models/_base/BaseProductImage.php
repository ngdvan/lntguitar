<?php

/**
 * This is the model base class for the table "{{product_image}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ProductImage".
 *
 * Columns in table "{{product_image}}" available as properties of the model,
 * followed by relations of table "{{product_image}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $product_id
 * @property string $file_path
 *
 * @property Product $product
 */
abstract class BaseProductImage extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{product_image}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'áº¢nh slide', $n);
	}

	public static function representingColumn() {
		return 'file_path';
	}

	public function rules() {
		return array(
			array('product_id, file_path', 'required'),
			array('product_id', 'numerical', 'integerOnly'=>true),
			array('file_path', 'length', 'max'=>255),
			array('id, product_id, file_path', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'product' => array(self::BELONGS_TO, 'Product', 'product_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'product_id' => null,
			'file_path' => Yii::t('app', 'File Path'),
			'product' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('product_id', $this->product_id);
		$criteria->compare('file_path', $this->file_path, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
            'pagination'=>array(
                'pageSize'=>Yii::app()->params['itemsPerPage'],
            ),
		));
	}
}