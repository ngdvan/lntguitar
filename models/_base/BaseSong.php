<?php

/**
 * This is the model base class for the table "{{song}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Song".
 *
 * Columns in table "{{song}}" available as properties of the model,
 * followed by relations of table "{{song}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $title
 * @property string $lyrics
 * @property string $embed_code
 * @property string $ban_artist
 * @property integer $tid
 * @property string $image
 * @property integer $view
 * @property integer $ban_id
 * @property integer $user_id
 * @property integer $create_time
 * @property integer $update_time
 * @property integer $status
 *
 * @property LikeSong[] $likeSongs
 * @property RateSong[] $rateSongs
 * @property Ban $ban
 * @property Term $t
 * @property XfUser $user
 */
abstract class BaseSong extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{song}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Bản nhạc', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title, tid', 'required'),
			array('tid, view, ban_id, user_id, create_time, update_time, status', 'numerical', 'integerOnly'=>true),
			array('image,title,ban_artist', 'length', 'max'=>255),
			array('lyrics, embed_code', 'safe'),
			array('lyrics, embed_code, view, user_id, create_time, update_time, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title, lyrics, embed_code, tid, view, ban_id, user_id, create_time, update_time, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'likeSongs' => array(self::HAS_MANY, 'LikeSong', 'song_id'),
			'likeCount' => array(self::STAT, 'LikeSong', 'song_id'),
			'rateSongs' => array(self::HAS_MANY, 'RateSong', 'song_id'),
			'rateCount' => array(self::STAT, 'RateSong', 'song_id'),
			'ban' => array(self::BELONGS_TO, 'Ban', 'ban_id'),
			't' => array(self::BELONGS_TO, 'Term', 'tid'),
			'user' => array(self::BELONGS_TO, 'XfUser', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title' => Yii::t('app', 'Tiêu đề'),
			'lyrics' => Yii::t('app', 'File nhạc'),
			'embed_code' => Yii::t('app', 'Mã nhúng'),
			'tid' => null,
			'image' => Yii::t('app', 'Hình ảnh'),
			'view' => Yii::t('app', 'Lượt xem'),
			'ban_id' => null,
			'user_id' => null,
			'create_time' => Yii::t('app', 'Ngày đăng'),
			'update_time' => Yii::t('app', 'Update Time'),
			'status' => Yii::t('app', 'Trạng thái'),
			'likeSongs' => null,
			'rateSongs' => null,
			'ban' => null,
			't' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('lyrics', $this->lyrics, true);
		$criteria->compare('embed_code', $this->embed_code, true);
		$criteria->compare('tid', $this->tid);
		//$criteria->compare('view', $this->view);
		$criteria->compare('ban_id', $this->ban_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('create_time', $this->create_time);
		$criteria->compare('update_time', $this->update_time);
		$criteria->compare('status', $this->status);
		$criteria->compare('image', $this->image, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
            'pagination'=>array(
                'pageSize'=>Yii::app()->params['itemsPerPage'],
            ),
		));
	}
}