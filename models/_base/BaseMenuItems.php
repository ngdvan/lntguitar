<?php

/**
 * This is the model base class for the table "{{menu_items}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MenuItems".
 *
 * Columns in table "{{menu_items}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $sort
 * @property integer $parent
 * @property string $title
 * @property string $router
 * @property string $url
 * @property integer $is_backend
 *
 */
abstract class BaseMenuItems extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{menu_items}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MenuItems|MenuItems', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('sort, parent, is_backend', 'numerical', 'integerOnly'=>true),
			array('title, router, url', 'length', 'max'=>255),
			array('sort, parent, title, router, url, is_backend', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, sort, parent, title, router, url, is_backend', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'sort' => Yii::t('app', 'Sort'),
			'parent' => Yii::t('app', 'Parent'),
			'title' => Yii::t('app', 'Title'),
			'router' => Yii::t('app', 'Router'),
			'url' => Yii::t('app', 'Url'),
			'is_backend' => Yii::t('app', 'Is Backend'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('sort', $this->sort);
		$criteria->compare('parent', $this->parent);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('router', $this->router, true);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('is_backend', $this->is_backend);

		return new CActiveDataProvider($this, array(
            'pagination'=>array(
                'pageSize'=>Yii::app()->params['itemsPerPage'],
            ),
            'criteria' => $criteria,
		));
	}
}