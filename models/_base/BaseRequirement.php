<?php

/**
 * This is the model base class for the table "{{requirement}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Requirement".
 *
 * Columns in table "{{requirement}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $title
 * @property integer $type
 * @property integer $user_id
 * @property string $requirement
 * @property integer $status
 *
 */
abstract class BaseRequirement extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{requirement}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Requirement|Requirements', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title, requirement', 'required'),
			array('type, user_id, status', 'numerical', 'integerOnly'=>true),
			array('title,demourl', 'length', 'max'=>255),
			array('type, user_id, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title, type, user_id, requirement, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title' => Yii::t('app', 'Tên bài'),
			'type' => Yii::t('app', 'Kiểu'),
			'user_id' => Yii::t('app', 'Thành viên'),
			'requirement' => Yii::t('app', 'Yêu cầu'),
			'status' => Yii::t('app', 'Trạng thái'),
            'demourl'=>"Url",
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('type', $this->type);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('requirement', $this->requirement, true);
		$criteria->compare('status', $this->status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
            'pagination'=>array(
                'pageSize'=>Yii::app()->params['itemsPerPage'],
            ),
		));
	}
}